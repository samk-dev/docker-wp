version: '3.9'

services:
    nginxserver:
        build:
            context: .
            dockerfile: etc/docker/nginx.dockerfile
        container_name: ${APP_NAME}-nginx
        restart: unless-stopped
        tty: true
        ports:
            - ${PORT_NGINX}:80
            - ${PORT_NGINX_SSL}:443
        depends_on:
            - phpserver
        volumes:
            - ./app:/var/www/html
            - ./etc/certs:/etc/letsencrypt
            - ./etc/config/nginx.conf:/etc/nginx/conf.d/default.conf
        links:
            - phpserver
            - dbserver
        networks:
            - docker-wp

    dbserver:
        image: mysql:latest
        container_name: ${APP_NAME}-mysql
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        tty: true
        volumes:
            - ./etc/data/db_data:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DB_NAME}
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_ROOT_PASSWORD}
        ports:
            - ${PORT_DB}:3306
        networks:
            - docker-wp

    phpserver:
        build:
            context: .
            dockerfile: etc/docker/php.dockerfile
        container_name: ${APP_NAME}-php
        restart: unless-stopped
        volumes:
            - ./etc/config/wordpress.ini:/usr/local/etc/php/conf.d/wordpress.ini
            - ./app:/var/www/html
        environment:
            WORDPRESS_DB_HOST: ${DB_HOST}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            WORDPRESS_DB_NAME: ${DB_NAME}
            WORDPRESS_DB_USER: ${DB_ROOT_USER}
            WORDPRESS_DB_PASSWORD: ${DB_ROOT_PASSWORD}
            WORDPRESS_TABLE_PREFIX: ${DB_TABLE_PREFIX}
        depends_on:
            - dbserver
        links:
            - dbserver
            - mailserver
        networks:
            - docker-wp

    dbadmin:
        image: phpmyadmin/phpmyadmin
        container_name: ${APP_NAME}-phpmyadmin
        restart: always
        links:
            - dbserver
        ports:
            - ${PORT_DB_ADMIN}:80
        environment:
            MYSQL_USERNAME: ${DB_ROOT_USER}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            PMA_ARBITRARY: 1
        networks:
            - docker-wp

    mailserver:
        image: mailhog/mailhog
        container_name: ${APP_NAME}-mailhog
        ports:
            - ${PORT_MAIL_SERVER}:1025
            - ${PORT_MAIL_UI}:8025
        networks:
            - docker-wp

networks:
    docker-wp:
        driver: bridge
